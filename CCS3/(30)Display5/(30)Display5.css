/*
	Ajuste dos elementos dentro do containner;
		display-flex = Usado no Containner
		flex = Usado nos filhos do Containner
			1 = Elemento Flexivel, preenche o espaço do containner

		flex-wrap: Quebra de Linha;
			nowrap = Não faz a quebra de linha 
			wrap = Faz a bra de linha

		justify-content: Alinhamento Horizontal dos elementos;
			flex-start = Esquerda;
			flex-end = Direita;
			center = Centro;

		align-items: Alinahmento Vertical do elementos;
			flex-start = Esquerda;
			flex-end = Direita;
			center = Centro;

		flex-direction: Direção dos elementos;
			row = Linha;
			column = Coluna;
			row-reverse = Inverte a ordem
			column-reverse = Inverte a ordem

		order: Configura a order dos elementos dentro do containner;

		flex-grow: Configuração padrão do flex;
			0 = Se não Vai esticar || 1 = Se vai Esticar
		flex-shrink: Indica se o elemento vai contrair;
			0 = Se não vai Contrair || 1 = Se vai Contrair
		flex-basis: ;
 */

 section{
 	border: 3px solid #F00; 

 	display: flex; /* Deixa os elementos um do lado do outro */
 	display: -webkit-flex; /* Para versões mais abtigas do Chrome */
 	display: -moz-flex; /* Para versões mais antigas do Mozina */

 	flex-wrap: wrap;
 	-webkit-flex-wrap: wrap;
 	-moz-flex-wrap: wrap;
	
	justify-content: flex-start;
 	-webkit-flex-justify-content: flex-start;
 	-moz-flex-justify-content: flex-start;

 	align-items: flex-start;

 	flex-direction: row;
 	
 }

 div{
 	border: 1px solid #000;
 	height: 50px;
 	/*flex: 0; /* Quando se usa o flex no children nao se usa largura, porque ele se ajusta no elemento */
	/*flex-grow: 1;
	flex-shrink: 0;
	flex-basis: Qual o valor que ele vai oculpar do espaço vazio ; 
		auto = Preenche o eapaço disponivel*/
 }

#d1{
	order: 1;
	flex: 1 0 auto; /* flex-grow flex-shrink flex-basis */
	
}
#d2{
	order: 2;
	width: 100px;
}
#d3{
	order: 3;
	width: 100px;
}
#d4{
	order: 4;
	width: 100px;
}
#d5{
	order: 5;
	width: 100px;
}
#d6{
	order: 6;
	width: 100px;
}